#version 450

//layout (local_size_x = 3) in;

struct Sphere {
    vec3 position;
    float radius;
};

layout(std430, binding = 0) buffer Spheres {
    Sphere spheres[];
};

layout(std430, binding = 1) buffer Result {
    float minDistance;
};

layout(push_constant) uniform QueryData {
    vec3 query_point;
};

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= spheres.length()) {
        return; // Out of bounds check
    }

    float distance = length(spheres[index].position - query_point) - spheres[index].radius;

    // Atomic minimum operation to find the closest distance
    minDistance = min(minDistance, distance);
}
